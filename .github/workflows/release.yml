name: Release

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Setup git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "<>"

      - name: Checkout to released tag
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.0.0

      - name: Parse version from tag
        id: version
        uses: release-kit/semver@dc798abe05f8b45884bb63ff9d77a72885e38cb3 # v1.0.0

      - uses: actions/setup-node@0d7d2ca66539aca4af6c5102e29a33757e2c2d2c # v1.0.0
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/

      - name: Check build cache
        id: cache
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.0.0
        with:
          path: dist
          key: ${{ hashFiles('./yarn.lock', './src/**', './rollup.config.js', './jest.config.js') }}

      - name: Create a new build
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile
          yarn test
          yarn build

      - name: Set version from release
        uses: reedyuk/npm-version@9b08a57f534ead28c49f7b57665fe9f6d048ff74 # 1.0.1
        with:
          version: ${{ steps.version.outputs.full }}

      - name: Create NPM config
        run: npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish latest
        if: ${{ contains(github.event.release.target_commitish, 'main') && steps.version.outputs.prerelease == null }}
        run: |
          npm publish
          git push origin ${{ steps.version.outputs.tag }}:refs/heads/release/latest -f
          git push origin ${{ steps.version.outputs.tag }}:refs/heads/release/${{ steps.version.outputs.major }} -f

      - name: Publish RC
        if: ${{ contains(github.event.release.target_commitish, 'main') && steps.version.outputs.prerelease != null }}
        run: |
          npm publish --tag ${{ steps.version.outputs.prerelease }}
          git push origin ${{ steps.version.outputs.tag }}:refs/heads/release/${{ steps.version.outputs.prerelease }} -f

      - name: Publish previous major
        if: ${{ contains(github.event.release.target_commitish, 'release/') }}
        run: npm publish --tag v${{ steps.version.outputs.major }}
